@model ArticlesWithPaginationModel
@*@{
    var x = 0;
    var y = 1;
    //Layout = null;

    // Views/ControllerName/_Layout.cshtml- looking first
    // Views/Shared/_Layout.cshtml - looking after
}*@

<div class="gx-2">
    <a class="btn bg-primary" asp-action="Create" asp-controller="Article">Create</a>
    <a class="btn btn-info" asp-action="CreateArticleWithSource" asp-controller="Article">Create with source</a>
</div>

<div class="row">
    <h4>Search</h4>
    <input type="text" id="article-search" class="form-control col col-12" placeholder="Type article name" />
</div>

<div class="row">
    @foreach (var el in Model.ArticlePreviews)
    {
       await Html.RenderPartialAsync("ArticlePreivewPartial", el);
    }
</div>

<pagination page-info="Model.PageInfo" page-action="Index">
    <p>1123123123123123123</p>
</pagination>

@section Scripts
{
    <script src="/lib/bootstrap-autocomplete/autocomplete.js"></script>
    <script src="/js/article-search.js"></script>
}

@*@Html.Pagination(0, 10)*@

@*@if (true)
{
    @: Hello world
}
*@
@*
Razor:
-> one row sentence     
    <b>@el.Key</b> - @el.Value
    <p>@(20+10)</p>
    
-> many row sentence
    @{
    
    }
*@